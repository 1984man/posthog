// Generated by kea-typegen on Thu, 09 Jun 2022 19:49:56 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { CalcColumnState } from './insightsTableLogic'

export interface insightsTableLogicType extends Logic {
    actionCreators: {
        setCalcColumnState: (state: CalcColumnState) => {
            type: 'set calc column state (scenes.insights.InsightsTable.insightsTableLogic)'
            payload: {
                state: CalcColumnState
            }
        }
    }
    actionKeys: {
        'set calc column state (scenes.insights.InsightsTable.insightsTableLogic)': 'setCalcColumnState'
    }
    actionTypes: {
        setCalcColumnState: 'set calc column state (scenes.insights.InsightsTable.insightsTableLogic)'
    }
    actions: {
        setCalcColumnState: (state: CalcColumnState) => void
    }
    defaults: {
        calcColumnState: CalcColumnState
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['scenes', 'insights', 'InsightsTable', 'insightsTableLogic']
    pathString: 'scenes.insights.InsightsTable.insightsTableLogic'
    props: {
        hasMathUniqueFilter: boolean
    }
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        calcColumnState: CalcColumnState
    }
    reducers: {
        calcColumnState: (state: CalcColumnState, action: any, fullState: any) => CalcColumnState
    }
    selector: (state: any) => {
        calcColumnState: CalcColumnState
    }
    selectors: {
        calcColumnState: (state: any, props?: any) => CalcColumnState
    }
    sharedListeners: {}
    values: {
        calcColumnState: CalcColumnState
    }
    _isKea: true
    _isKeaWithKey: false
}
