// Generated by kea-typegen on Thu, 09 Jun 2022 19:50:15 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { FilterType, InsightLogicProps, InsightModel, TrendResult } from '../../../types'

export interface worldMapLogicType extends Logic {
    actionCreators: {
        showTooltip: (
            countryCode: string,
            countrySeries: TrendResult | null
        ) => {
            type: 'show tooltip (scenes.insights.WorldMap.worldMapLogic.*)'
            payload: {
                countryCode: string
                countrySeries: TrendResult | null
            }
        }
        hideTooltip: () => {
            type: 'hide tooltip (scenes.insights.WorldMap.worldMapLogic.*)'
            payload: {
                value: true
            }
        }
        updateTooltipCoordinates: (
            x: number,
            y: number
        ) => {
            type: 'update tooltip coordinates (scenes.insights.WorldMap.worldMapLogic.*)'
            payload: {
                x: number
                y: number
            }
        }
    }
    actionKeys: {
        'show tooltip (scenes.insights.WorldMap.worldMapLogic.*)': 'showTooltip'
        'hide tooltip (scenes.insights.WorldMap.worldMapLogic.*)': 'hideTooltip'
        'update tooltip coordinates (scenes.insights.WorldMap.worldMapLogic.*)': 'updateTooltipCoordinates'
    }
    actionTypes: {
        showTooltip: 'show tooltip (scenes.insights.WorldMap.worldMapLogic.*)'
        hideTooltip: 'hide tooltip (scenes.insights.WorldMap.worldMapLogic.*)'
        updateTooltipCoordinates: 'update tooltip coordinates (scenes.insights.WorldMap.worldMapLogic.*)'
    }
    actions: {
        showTooltip: (countryCode: string, countrySeries: TrendResult | null) => void
        hideTooltip: () => void
        updateTooltipCoordinates: (x: number, y: number) => void
    }
    defaults: {
        isTooltipShown: boolean
        currentTooltip: [string, TrendResult | null] | null
        tooltipCoordinates: [number, number] | null
    }
    events: {}
    key: string | number
    listeners: {}
    path: ['scenes', 'insights', 'WorldMap', 'worldMapLogic', '*']
    pathString: 'scenes.insights.WorldMap.worldMapLogic.*'
    props: InsightLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        isTooltipShown: boolean
        currentTooltip: [string, TrendResult | null] | null
        tooltipCoordinates: [number, number] | null
    }
    reducers: {
        isTooltipShown: (state: boolean, action: any, fullState: any) => boolean
        currentTooltip: (
            state: [string, TrendResult | null] | null,
            action: any,
            fullState: any
        ) => [string, TrendResult | null] | null
        tooltipCoordinates: (state: [number, number] | null, action: any, fullState: any) => [number, number] | null
    }
    selector: (state: any) => {
        isTooltipShown: boolean
        currentTooltip: [string, TrendResult | null] | null
        tooltipCoordinates: [number, number] | null
    }
    selectors: {
        isTooltipShown: (state: any, props?: any) => boolean
        currentTooltip: (state: any, props?: any) => [string, TrendResult | null] | null
        tooltipCoordinates: (state: any, props?: any) => [number, number] | null
        insight: (state: any, props?: any) => Partial<InsightModel>
        filters: (state: any, props?: any) => Partial<FilterType>
        countryCodeToSeries: (state: any, props?: any) => Record<string, TrendResult>
        maxAggregatedValue: (state: any, props?: any) => number
    }
    sharedListeners: {}
    values: {
        isTooltipShown: boolean
        currentTooltip: [string, TrendResult | null] | null
        tooltipCoordinates: [number, number] | null
        insight: Partial<InsightModel>
        filters: Partial<FilterType>
        countryCodeToSeries: Record<string, TrendResult>
        maxAggregatedValue: number
    }
    _isKea: true
    _isKeaWithKey: true
    __keaTypeGenInternalSelectorTypes: {
        countryCodeToSeries: (
            insight: Partial<import('/Users/marius/Projects/PostHog/posthog/frontend/src/types').InsightModel>
        ) => Record<string, TrendResult>
        maxAggregatedValue: (
            insight: Partial<import('/Users/marius/Projects/PostHog/posthog/frontend/src/types').InsightModel>
        ) => number
    }
}
