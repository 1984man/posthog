// Generated by kea-typegen on Thu, 09 Jun 2022 19:50:21 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { Breadcrumb, GroupType } from '../../types'
import type { GroupsPaginatedResponse } from './groupsListLogic'

export interface groupsListLogicType extends Logic {
    actionCreators: {
        loadGroups: (url?: string | null) => {
            type: 'load groups (groups.groupsListLogic)'
            payload: {
                url: string | null | undefined
            }
        }
        setTab: (tab: string) => {
            type: 'set tab (groups.groupsListLogic)'
            payload: {
                tab: string
            }
        }
        loadGroupsSuccess: (
            groups: GroupsPaginatedResponse,
            payload?: {
                url: string | null | undefined
            }
        ) => {
            type: 'load groups success (groups.groupsListLogic)'
            payload: {
                groups: GroupsPaginatedResponse
                payload?: {
                    url: string | null | undefined
                }
            }
        }
        loadGroupsFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'load groups failure (groups.groupsListLogic)'
            payload: {
                error: string
                errorObject?: any
            }
        }
    }
    actionKeys: {
        'load groups (groups.groupsListLogic)': 'loadGroups'
        'set tab (groups.groupsListLogic)': 'setTab'
        'load groups success (groups.groupsListLogic)': 'loadGroupsSuccess'
        'load groups failure (groups.groupsListLogic)': 'loadGroupsFailure'
    }
    actionTypes: {
        loadGroups: 'load groups (groups.groupsListLogic)'
        setTab: 'set tab (groups.groupsListLogic)'
        loadGroupsSuccess: 'load groups success (groups.groupsListLogic)'
        loadGroupsFailure: 'load groups failure (groups.groupsListLogic)'
    }
    actions: {
        loadGroups: (url?: string | null) => void
        setTab: (tab: string) => void
        loadGroupsSuccess: (
            groups: GroupsPaginatedResponse,
            payload?: {
                url: string | null | undefined
            }
        ) => void
        loadGroupsFailure: (error: string, errorObject?: any) => void
    }
    defaults: {
        groups: GroupsPaginatedResponse
        groupsLoading: boolean
        currentTab: string
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['groups', 'groupsListLogic']
    pathString: 'groups.groupsListLogic'
    props: Record<string, unknown>
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        groups: GroupsPaginatedResponse
        groupsLoading: boolean
        currentTab: string
    }
    reducers: {
        groups: (state: GroupsPaginatedResponse, action: any, fullState: any) => GroupsPaginatedResponse
        groupsLoading: (state: boolean, action: any, fullState: any) => boolean
        currentTab: (state: string, action: any, fullState: any) => string
    }
    selector: (state: any) => {
        groups: GroupsPaginatedResponse
        groupsLoading: boolean
        currentTab: string
    }
    selectors: {
        groups: (state: any, props?: any) => GroupsPaginatedResponse
        groupsLoading: (state: any, props?: any) => boolean
        currentTab: (state: any, props?: any) => string
        currentTeamId: (state: any, props?: any) => number | null
        groupTypes: (state: any, props?: any) => Array<GroupType>
        aggregationLabel: (
            state: any,
            props?: any
        ) => (
            groupTypeIndex: number | null | undefined,
            deferToUserWording?: boolean
        ) => {
            singular: string
            plural: string
        }
        groupsEnabled: (state: any, props?: any) => boolean
        currentTabName: (state: any, props?: any) => string
        breadcrumbs: (state: any, props?: any) => Breadcrumb[]
    }
    sharedListeners: {}
    values: {
        groups: GroupsPaginatedResponse
        groupsLoading: boolean
        currentTab: string
        currentTeamId: number | null
        groupTypes: Array<GroupType>
        aggregationLabel: (
            groupTypeIndex: number | null | undefined,
            deferToUserWording?: boolean
        ) => {
            singular: string
            plural: string
        }
        groupsEnabled: boolean
        currentTabName: string
        breadcrumbs: Breadcrumb[]
    }
    _isKea: true
    _isKeaWithKey: false
    __keaTypeGenInternalSelectorTypes: {
        currentTabName: (
            currentTab: string,
            groupTypes: import('/Users/marius/Projects/PostHog/posthog/frontend/src/types').GroupType[],
            aggregationLabel: (
                groupTypeIndex: number | null | undefined,
                deferToUserWording?: boolean | undefined
            ) => {
                singular: string
                plural: string
            }
        ) => string
        breadcrumbs: (currentTabName: string, currentTab: string) => Breadcrumb[]
    }
}
