// Generated by kea-typegen on Thu, 09 Jun 2022 19:50:15 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { DefinitionLogicProps, DefinitionPageMode, SetDefinitionProps } from './definitionLogic'
import type { AvailableFeature, Breadcrumb, Definition, PropertyType, UserBasicType } from '../../../types'

export interface definitionLogicType extends Logic {
    actionCreators: {
        setDefinition: (
            definition: Partial<Definition>,
            options?: SetDefinitionProps
        ) => {
            type: 'set definition (scenes.data-management.definition.definitionViewLogic)'
            payload: {
                definition: Partial<Definition>
                options: SetDefinitionProps
            }
        }
        loadDefinition: (id: Definition['id']) => {
            type: 'load definition (scenes.data-management.definition.definitionViewLogic)'
            payload: {
                id: string
            }
        }
        setPageMode: (mode: DefinitionPageMode) => {
            type: 'set page mode (scenes.data-management.definition.definitionViewLogic)'
            payload: {
                mode: DefinitionPageMode
            }
        }
        setDefinitionSuccess: (
            definition: Definition,
            payload?: {
                definition: Partial<Definition>
                options: SetDefinitionProps
            }
        ) => {
            type: 'set definition success (scenes.data-management.definition.definitionViewLogic)'
            payload: {
                definition: Definition
                payload?: {
                    definition: Partial<Definition>
                    options: SetDefinitionProps
                }
            }
        }
        setDefinitionFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'set definition failure (scenes.data-management.definition.definitionViewLogic)'
            payload: {
                error: string
                errorObject?: any
            }
        }
        loadDefinitionSuccess: (
            definition:
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      volume_30_day: number | null
                      query_usage_30_day: number | null
                      owner?: UserBasicType | null | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      verified?: boolean | undefined
                      verified_at?: string | undefined
                      verified_by?: string | undefined
                  }
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      volume_30_day: number | null
                      query_usage_30_day: number | null
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      is_numerical?: boolean | undefined
                      is_event_property?: boolean | undefined
                      property_type?: PropertyType | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      example?: string | undefined
                  },
            payload?: {
                id: string
            }
        ) => {
            type: 'load definition success (scenes.data-management.definition.definitionViewLogic)'
            payload: {
                definition:
                    | {
                          id: string
                          name: string
                          description?: string | undefined
                          tags?: string[] | undefined
                          volume_30_day: number | null
                          query_usage_30_day: number | null
                          owner?: UserBasicType | null | undefined
                          created_at?: string | undefined
                          last_seen_at?: string | undefined
                          updated_at?: string | undefined
                          updated_by?: UserBasicType | null | undefined
                          verified?: boolean | undefined
                          verified_at?: string | undefined
                          verified_by?: string | undefined
                      }
                    | {
                          id: string
                          name: string
                          description?: string | undefined
                          tags?: string[] | undefined
                          volume_30_day: number | null
                          query_usage_30_day: number | null
                          updated_at?: string | undefined
                          updated_by?: UserBasicType | null | undefined
                          is_numerical?: boolean | undefined
                          is_event_property?: boolean | undefined
                          property_type?: PropertyType | undefined
                          created_at?: string | undefined
                          last_seen_at?: string | undefined
                          example?: string | undefined
                      }
                payload?: {
                    id: string
                }
            }
        }
        loadDefinitionFailure: (
            error: string,
            errorObject?: any
        ) => {
            type: 'load definition failure (scenes.data-management.definition.definitionViewLogic)'
            payload: {
                error: string
                errorObject?: any
            }
        }
    }
    actionKeys: {
        'set definition (scenes.data-management.definition.definitionViewLogic)': 'setDefinition'
        'load definition (scenes.data-management.definition.definitionViewLogic)': 'loadDefinition'
        'set page mode (scenes.data-management.definition.definitionViewLogic)': 'setPageMode'
        'set definition success (scenes.data-management.definition.definitionViewLogic)': 'setDefinitionSuccess'
        'set definition failure (scenes.data-management.definition.definitionViewLogic)': 'setDefinitionFailure'
        'load definition success (scenes.data-management.definition.definitionViewLogic)': 'loadDefinitionSuccess'
        'load definition failure (scenes.data-management.definition.definitionViewLogic)': 'loadDefinitionFailure'
    }
    actionTypes: {
        setDefinition: 'set definition (scenes.data-management.definition.definitionViewLogic)'
        loadDefinition: 'load definition (scenes.data-management.definition.definitionViewLogic)'
        setPageMode: 'set page mode (scenes.data-management.definition.definitionViewLogic)'
        setDefinitionSuccess: 'set definition success (scenes.data-management.definition.definitionViewLogic)'
        setDefinitionFailure: 'set definition failure (scenes.data-management.definition.definitionViewLogic)'
        loadDefinitionSuccess: 'load definition success (scenes.data-management.definition.definitionViewLogic)'
        loadDefinitionFailure: 'load definition failure (scenes.data-management.definition.definitionViewLogic)'
    }
    actions: {
        setDefinition: (definition: Partial<Definition>, options?: SetDefinitionProps) => void
        loadDefinition: (id: Definition['id']) => void
        setPageMode: (mode: DefinitionPageMode) => void
        setDefinitionSuccess: (
            definition: Definition,
            payload?: {
                definition: Partial<Definition>
                options: SetDefinitionProps
            }
        ) => void
        setDefinitionFailure: (error: string, errorObject?: any) => void
        loadDefinitionSuccess: (
            definition:
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      volume_30_day: number | null
                      query_usage_30_day: number | null
                      owner?: UserBasicType | null | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      verified?: boolean | undefined
                      verified_at?: string | undefined
                      verified_by?: string | undefined
                  }
                | {
                      id: string
                      name: string
                      description?: string | undefined
                      tags?: string[] | undefined
                      volume_30_day: number | null
                      query_usage_30_day: number | null
                      updated_at?: string | undefined
                      updated_by?: UserBasicType | null | undefined
                      is_numerical?: boolean | undefined
                      is_event_property?: boolean | undefined
                      property_type?: PropertyType | undefined
                      created_at?: string | undefined
                      last_seen_at?: string | undefined
                      example?: string | undefined
                  },
            payload?: {
                id: string
            }
        ) => void
        loadDefinitionFailure: (error: string, errorObject?: any) => void
    }
    defaults: {
        mode: DefinitionPageMode
        definition: Definition
        definitionLoading: boolean
    }
    events: {}
    key: string
    listeners: {}
    path: ['scenes', 'data-management', 'definition', 'definitionViewLogic']
    pathString: 'scenes.data-management.definition.definitionViewLogic'
    props: DefinitionLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        mode: DefinitionPageMode
        definition: Definition
        definitionLoading: boolean
    }
    reducers: {
        mode: (state: DefinitionPageMode, action: any, fullState: any) => DefinitionPageMode
        definition: (state: Definition, action: any, fullState: any) => Definition
        definitionLoading: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        mode: DefinitionPageMode
        definition: Definition
        definitionLoading: boolean
    }
    selectors: {
        mode: (state: any, props?: any) => DefinitionPageMode
        definition: (state: any, props?: any) => Definition
        definitionLoading: (state: any, props?: any) => boolean
        hasAvailableFeature: (state: any, props?: any) => (feature: AvailableFeature) => boolean
        hasTaxonomyFeatures: (state: any, props?: any) => boolean
        isEvent: (state: any, props?: any) => boolean
        singular: (state: any, props?: any) => string
        backDetailUrl: (state: any, props?: any) => string
        breadcrumbs: (state: any, props?: any) => Breadcrumb[]
    }
    sharedListeners: {}
    values: {
        mode: DefinitionPageMode
        definition: Definition
        definitionLoading: boolean
        hasAvailableFeature: (feature: AvailableFeature) => boolean
        hasTaxonomyFeatures: boolean
        isEvent: boolean
        singular: string
        backDetailUrl: string
        breadcrumbs: Breadcrumb[]
    }
    _isKea: true
    _isKeaWithKey: true
    __keaTypeGenInternalSelectorTypes: {
        hasTaxonomyFeatures: (hasAvailableFeature: (feature: AvailableFeature) => boolean) => boolean
        isEvent: (location: { pathname: string; search: string; hash: string }) => boolean
        singular: (isEvent: boolean) => string
        backDetailUrl: (isEvent: boolean, definition: Definition) => string
        breadcrumbs: (definition: Definition, isEvent: boolean) => Breadcrumb[]
    }
}
