// Generated by kea-typegen on Thu, 09 Jun 2022 19:50:03 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { TableConfigLogicProps } from './tableConfigLogic'
import type { ColumnChoice } from '../../../types'

export interface tableConfigLogicType extends Logic {
    actionCreators: {
        showModal: () => {
            type: 'show modal (lib.components.ResizableTable.tableConfigLogic)'
            payload: {
                value: true
            }
        }
        hideModal: () => {
            type: 'hide modal (lib.components.ResizableTable.tableConfigLogic)'
            payload: {
                value: true
            }
        }
        setSelectedColumns: (columnConfig: ColumnChoice) => {
            type: 'set selected columns (lib.components.ResizableTable.tableConfigLogic)'
            payload: {
                columnConfig: ColumnChoice
            }
        }
    }
    actionKeys: {
        'show modal (lib.components.ResizableTable.tableConfigLogic)': 'showModal'
        'hide modal (lib.components.ResizableTable.tableConfigLogic)': 'hideModal'
        'set selected columns (lib.components.ResizableTable.tableConfigLogic)': 'setSelectedColumns'
    }
    actionTypes: {
        showModal: 'show modal (lib.components.ResizableTable.tableConfigLogic)'
        hideModal: 'hide modal (lib.components.ResizableTable.tableConfigLogic)'
        setSelectedColumns: 'set selected columns (lib.components.ResizableTable.tableConfigLogic)'
    }
    actions: {
        showModal: () => void
        hideModal: () => void
        setSelectedColumns: (columnConfig: ColumnChoice) => void
    }
    defaults: {
        selectedColumns: ColumnChoice
        modalVisible: boolean
    }
    events: {}
    key: undefined
    listeners: {}
    path: ['lib', 'components', 'ResizableTable', 'tableConfigLogic']
    pathString: 'lib.components.ResizableTable.tableConfigLogic'
    props: TableConfigLogicProps
    reducer: (
        state: any,
        action: any,
        fullState: any
    ) => {
        selectedColumns: ColumnChoice
        modalVisible: boolean
    }
    reducers: {
        selectedColumns: (state: ColumnChoice, action: any, fullState: any) => ColumnChoice
        modalVisible: (state: boolean, action: any, fullState: any) => boolean
    }
    selector: (state: any) => {
        selectedColumns: ColumnChoice
        modalVisible: boolean
    }
    selectors: {
        selectedColumns: (state: any, props?: any) => ColumnChoice
        modalVisible: (state: any, props?: any) => boolean
        tableWidth: (state: any, props?: any) => number
    }
    sharedListeners: {}
    values: {
        selectedColumns: ColumnChoice
        modalVisible: boolean
        tableWidth: number
    }
    _isKea: true
    _isKeaWithKey: false
    __keaTypeGenInternalSelectorTypes: {
        tableWidth: (selectedColumns: ColumnChoice) => number
    }
}
