// Generated by kea-typegen on Thu, 09 Jun 2022 19:50:21 GMT. DO NOT EDIT THIS FILE MANUALLY.

import type { Logic } from 'kea'

import type { FilterType, InsightLogicProps, IntervalType, ItemMode } from '../../../types'
import type { IntervalKeyType } from './intervals'

export interface intervalFilterLogicType extends Logic {
    actionCreators: {
        setFilters: (
            filters: Partial<FilterType>,
            insightMode?: ItemMode
        ) => {
            type: 'set filters (lib.components.IntervalFilter.intervalFilterLogic.*)'
            payload: {
                filters: Partial<FilterType>
                insightMode: ItemMode | undefined
            }
        }
        setInterval: (interval: IntervalKeyType) => {
            type: 'set interval (lib.components.IntervalFilter.intervalFilterLogic.*)'
            payload: {
                interval: 'hour' | 'day' | 'week' | 'month'
            }
        }
    }
    actionKeys: {
        'set filters (lib.components.IntervalFilter.intervalFilterLogic.*)': 'setFilters'
        'set interval (lib.components.IntervalFilter.intervalFilterLogic.*)': 'setInterval'
    }
    actionTypes: {
        setFilters: 'set filters (lib.components.IntervalFilter.intervalFilterLogic.*)'
        setInterval: 'set interval (lib.components.IntervalFilter.intervalFilterLogic.*)'
    }
    actions: {
        setFilters: (filters: Partial<FilterType>, insightMode?: ItemMode) => void
        setInterval: (interval: IntervalKeyType) => void
    }
    defaults: {}
    events: {}
    key: string | number
    listeners: {
        setInterval: ((
            action: {
                type: 'set interval (lib.components.IntervalFilter.intervalFilterLogic.*)'
                payload: {
                    interval: 'hour' | 'day' | 'week' | 'month'
                }
            },
            previousState: any
        ) => void | Promise<void>)[]
    }
    path: ['lib', 'components', 'IntervalFilter', 'intervalFilterLogic', '*']
    pathString: 'lib.components.IntervalFilter.intervalFilterLogic.*'
    props: InsightLogicProps
    reducer: (state: any, action: any, fullState: any) => {}
    reducers: {}
    selector: (state: any) => {}
    selectors: {
        filters: (state: any, props?: any) => Partial<FilterType>
        interval: (state: any, props?: any) => IntervalType | undefined
    }
    sharedListeners: {}
    values: {
        filters: Partial<FilterType>
        interval: IntervalType | undefined
    }
    _isKea: true
    _isKeaWithKey: true
    __keaTypeGenInternalSelectorTypes: {
        interval: (
            filters: Partial<import('/Users/marius/Projects/PostHog/posthog/frontend/src/types').FilterType>
        ) => IntervalType | undefined
    }
}
